{"version":3,"file":"static/js/546.39598983.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","webpack://web-studio-react/./src/components/FormOrderService/FormOrderService.module.css?ed28","components/FormOrderService/FormOrderService.jsx","webpack://web-studio-react/./src/components/Hero/Hero.module.css?07ff","components/Hero/Hero.jsx","views/HomeView.js"],"sourcesContent":["const Section = ({ children, className }) => {\n  return <section className={className}>{children}</section>;\n};\n\nexport { Section };\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormOrderService_form__ImiUK\",\"formHeader\":\"FormOrderService_formHeader__n0uBp\",\"formLabel\":\"FormOrderService_formLabel__Hom2A\",\"labelSpan\":\"FormOrderService_labelSpan__0TMSE\",\"modalFormInput\":\"FormOrderService_modalFormInput__grCFq\",\"modalFormIcon\":\"FormOrderService_modalFormIcon__srxFf\",\"labelComment\":\"FormOrderService_labelComment__9D67x\",\"textarea\":\"FormOrderService_textarea__0urzk\",\"labelCheckbox\":\"FormOrderService_labelCheckbox__2V2Ep\",\"inputСheckbox\":\"FormOrderService_inputСheckbox__LVMb6\",\"iconСheckbox\":\"FormOrderService_iconСheckbox__MTBaa\",\"iconUse\":\"FormOrderService_iconUse__ZPRvu\",\"blankCheckBox\":\"FormOrderService_blankCheckBox__CJtOH\",\"checkBox\":\"FormOrderService_checkBox__-5BTE\",\"spanContract\":\"FormOrderService_spanContract__0NyIU\",\"ButtonSubmit\":\"FormOrderService_ButtonSubmit__LGItD\",\"buttonDisabled\":\"FormOrderService_buttonDisabled__FDDIx\",\"ErrorMessage\":\"FormOrderService_ErrorMessage__1EN-g\"};","import { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { IconSvg } from 'components/IconSvg';\nimport { Button } from 'components/Button';\nimport icon from 'assets/symbol-defs.svg';\nimport { ColorRing } from 'react-loader-spinner';\nimport { object, string, number } from 'yup';\nimport s from './FormOrderService.module.css';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={massage => <p className={s.ErrorMessage}>{massage}</p>}\n    />\n  );\n};\n\nconst userSchema = object({\n  name: string().min(3).required(),\n  tel: number().required(),\n  email: string().email().required(),\n});\n\nconst initialValues = { name: '', tel: '', email: '' };\n\nexport const FormOrderService = () => {\n  const [postContent, setPostContent] = useState('');\n  const [agreed, setAgreed] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n\n  const handleChange = evt => {\n    const { name, value, checked } = evt.target;\n\n    switch (name) {\n      case 'comment':\n        setPostContent(value);\n        break;\n\n      case 'agreed':\n        setAgreed(checked);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = ({ name, tel, email }, { resetForm }) => {\n    setLoader(true);\n    setDisabled(true);\n    formSubmitHandler(name, tel, email, resetForm);\n  };\n\n  //modal fun form\n  const formSubmitHandler = (name, tel, email, resetForm) => {\n    setTimeout(() => {\n      console.log(\n        `name: ${name}, tel: ${tel}, email: ${email}, comment: ${postContent}, Agreed: ${agreed}`\n      );\n      resetForm();\n      setResetForm();\n    }, 3000);\n  };\n\n  const setResetForm = () => {\n    setPostContent('');\n    setAgreed(false);\n    setLoader(false);\n    setDisabled(false);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={userSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form className={s.form}>\n        <b className={s.formHeader}>Оставьте свои данные, мы вам перезвоним</b>\n\n        <label className={s.formLabel}>\n          <span className={s.labelSpan}>Имя</span>\n          <Field\n            className={s.modalFormInput}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\" \"\n          />\n\n          <IconSvg\n            className={s.modalFormIcon}\n            iconId=\"person\"\n            width=\"18\"\n            height=\"18\"\n          />\n          <FormError name=\"name\" />\n        </label>\n\n        <label className={s.formLabel}>\n          <span className={s.labelSpan}>Телефон</span>\n          <Field\n            className={s.modalFormInput}\n            type=\"tel\"\n            name=\"tel\"\n            placeholder=\" \"\n          />\n          <IconSvg\n            className={s.modalFormIcon}\n            iconId=\"phone\"\n            width=\"18\"\n            height=\"18\"\n          />\n          <FormError name=\"tel\" />\n        </label>\n\n        <label className={s.formLabel}>\n          <span className={s.labelSpan}>Почта</span>\n          <Field\n            className={s.modalFormInput}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\" \"\n          />\n          <IconSvg\n            className={s.modalFormIcon}\n            iconId=\"email\"\n            width=\"18\"\n            height=\"18\"\n          />\n          <FormError name=\"email\" />\n        </label>\n\n        <label className={`${s.formLabel} ${s.labelComment}`}>\n          <span className={s.labelSpan}>Комментарий</span>\n          <textarea\n            className={`${s.textarea} ${s.hoverFocus}`}\n            name=\"comment\"\n            placeholder=\"Введите текст\"\n            value={postContent}\n            onChange={handleChange}\n          />\n        </label>\n\n        <input\n          id=\"agreement\"\n          className={s.inputСheckbox}\n          type=\"checkbox\"\n          name=\"agreed\"\n          checked={agreed}\n          onChange={handleChange}\n        />\n        <label className={s.labelCheckbox} htmlFor=\"agreement\">\n          <svg className={s.iconСheckbox} width=\"15\" height=\"16\">\n            <use\n              className={`${s.iconUse} ${!agreed ? s.blankCheckBox : ''}`}\n              href={`${icon}#blank-check-box`}\n            ></use>\n            <use\n              className={`${s.iconUse} ${agreed ? s.checkBox : ''}`}\n              href={`${icon}#check-box`}\n            ></use>\n          </svg>\n\n          <span className={s.labelSpan}>\n            Соглашаюсь с рассылкой и принимаю{' '}\n            <span className={s.spanContract}>Условия договора</span>\n          </span>\n        </label>\n\n        <Button\n          type=\"submit\"\n          disabled={!agreed || disabled}\n          className={`${s.ButtonSubmit} ${\n            !agreed || disabled ? s.buttonDisabled : ''\n          }`}\n        >\n          {loader ? (\n            <ColorRing\n              visible={true}\n              height=\"50\"\n              width=\"50\"\n              ariaLabel=\"blocks-loading\"\n              wrapperClass=\"blocks-wrapper\"\n              colors={['#b7d1e6', '#6eb1e7', '#2196f3', '#6eb1e7', '#b7d1e6']}\n            />\n          ) : (\n            'Отправить'\n          )}\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heroSection\":\"Hero_heroSection__2JBV2\",\"heroTitle\":\"Hero_heroTitle__edyX1\",\"heroBtn\":\"Hero_heroBtn__yz-dP\",\"modal__backdrop\":\"Hero_modal__backdrop__lQfAI\",\"modal__content\":\"Hero_modal__content__SvC9y\",\"beckdropIsHidden\":\"Hero_beckdropIsHidden__ig5u2\",\"btnClose\":\"Hero_btnClose__6ju0H\",\"icon\":\"Hero_icon__OlEJm\"};","import { useState } from 'react';\nimport { Section } from 'components/Section';\nimport { Button } from 'components/Button';\nimport { Modal } from 'components/Modal';\n// import { Form } from 'components/Form';\nimport { FormOrderService } from 'components/FormOrderService';\nimport { IconSvg } from 'components/IconSvg';\nimport s from './Hero.module.css';\n\nexport const Hero = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const [isHidden, setIsHidden] = useState(true);\n  const [isPressed, setIsPressed] = useState(false);\n\n  //modal form props\n  // const [userName, setUserName] = useState('');\n  // const [telephone, setTelephone] = useState('');\n  // const [mail, setMail] = useState('');\n  // const [postContent, setPostContent] = useState('');\n  // const [agreed, setAgreed] = useState(false);\n  // const [loader, setLoader] = useState(false);\n  // const [disabled, setDisabled] = useState(false);\n\n  const handleBtnClick = () => {\n    if (isPressed) {\n      return;\n    }\n\n    setIsPressed(true);\n\n    if (openModal === false) {\n      setOpenModal(true);\n\n      setTimeout(() => {\n        setIsHidden(false);\n        setIsPressed(false);\n      }, 150);\n    }\n\n    if (openModal === true) {\n      setIsHidden(true);\n\n      setTimeout(() => {\n        setOpenModal(false);\n        setIsPressed(false);\n      }, 300);\n    }\n  };\n\n  //modal fun form\n  // const formSubmitHandler = () => {\n  //   setTimeout(() => {\n  //     console.log(\n  //       `name: ${userName}, tel: ${telephone}, email: ${mail}, comment: ${postContent}, Agreed: ${agreed}`\n  //     );\n  //     resetForm();\n  //   }, 10000);\n  // };\n\n  // const resetForm = () => {\n  //   setUserName('');\n  //   setTelephone('');\n  //   setMail('');\n  //   setPostContent('');\n  //   setAgreed(false);\n  //   setLoader(false);\n  //   setDisabled(false);\n  // };\n\n  return (\n    <>\n      <Section className={s.heroSection}>\n        <h1 className={s.heroTitle}>Эффективные решения для вашего бизнеса</h1>\n        <Button className={s.heroBtn} handleBtnClick={handleBtnClick}>\n          Заказать услугу\n        </Button>\n      </Section>\n\n      {openModal && (\n        <Modal className={s} isHidden={isHidden}>\n          <Button className={s.btnClose} handleBtnClick={handleBtnClick}>\n            <IconSvg\n              className={s.icon}\n              iconId=\"modalClose\"\n              width=\"11\"\n              height=\"11\"\n            />\n          </Button>\n          {/* <Form\n            userName={userName}\n            setUserName={setUserName}\n            telephone={telephone}\n            setTelephone={setTelephone}\n            mail={mail}\n            setMail={setMail}\n            postContent={postContent}\n            setPostContent={setPostContent}\n            agreed={agreed}\n            setAgreed={setAgreed}\n            loader={loader}\n            setLoader={setLoader}\n            disabled={disabled}\n            setDisabled={setDisabled}\n            onSubmit={formSubmitHandler}\n          /> */}\n          <FormOrderService />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Hero } from 'components/Hero';\n\nconst HomeView = () => (\n  <main>\n    <Hero />\n  </main>\n);\n\nexport default HomeView;\n"],"names":["Section","children","className","FormError","name","render","massage","s","userSchema","object","string","min","required","tel","number","email","initialValues","FormOrderService","useState","postContent","setPostContent","agreed","setAgreed","loader","setLoader","disabled","setDisabled","handleChange","evt","target","value","checked","formSubmitHandler","resetForm","setTimeout","console","log","setResetForm","validationSchema","onSubmit","type","placeholder","IconSvg","iconId","width","height","onChange","id","htmlFor","href","icon","Button","visible","ariaLabel","wrapperClass","colors","Hero","openModal","setOpenModal","isHidden","setIsHidden","isPressed","setIsPressed","handleBtnClick","Modal"],"sourceRoot":""}