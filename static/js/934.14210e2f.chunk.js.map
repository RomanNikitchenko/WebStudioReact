{"version":3,"file":"static/js/934.14210e2f.chunk.js","mappings":"sKAAMA,EAAU,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC3B,OAAO,oBAASA,UAAWA,EAApB,SAAgCD,GACxC,C,uLCDD,EAAuB,4BAAvB,EAA2D,6BAA3D,EAA+F,4BAA/F,EAAoI,8B,SCcvHE,EAAgB,WAAO,IAAD,EACjC,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAK,UAAGV,EAAaW,IAAI,gBAApB,QAAgCR,GAE3CS,EAAAA,EAAAA,YAAU,WACJX,IACFO,GAASK,EAAAA,EAAAA,IAAmBC,OAAOJ,KACnCR,GAAW,KAEba,EAAAA,EAAAA,KAAYC,KAAKlB,EAClB,GAAE,CAACA,EAAaU,EAAUE,EAAOT,IAElC,IAMMgB,EAAgB,SAAC,GACrB,OADsC,EAAfC,SACR,UAAMC,EAAN,YAAgBA,GAAhB,UAAgCA,EAChD,EAED,OACE,eAAIzB,UAAWyB,EAAf,SACGtB,EAASuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACZ,eAAI5B,UAAWyB,EAAf,UACE,SAAC,KAAD,CACEI,QAAS,kBAfC,SAAAF,GAClBb,GAASK,EAAAA,EAAAA,IAAmB,IAC5BL,GAASgB,EAAAA,EAAAA,IAAeH,IACxBf,EAAQmB,OAAS,GAAKjB,GAASkB,EAAAA,EAAAA,IAAkB,IAClD,CAWwBC,CAAYN,EAAlB,EACT3B,UAAWuB,EACXK,KAAI,UAAKD,GACTO,GAAE,UAAKP,GAJT,SAMGC,KAPwBD,EADjB,KAcnB,ECrDKQ,GAAmBC,E,QAAAA,IAAOtC,EAAAA,EAAPsC,CAAH,sKAyBtB,EAfsB,WACpB,OACE,2BACE,SAACD,EAAD,WACE,UAACE,EAAA,EAAD,YACE,SAACpC,EAAD,KACA,SAAC,EAAAqC,SAAD,CAAUC,UAAU,sDAApB,UACE,SAAC,KAAD,YAMX,C","sources":["components/Section/Section.jsx","webpack://web-studio-react/./src/components/FilterListBtn/FilterListBtn.module.css?5667","components/FilterListBtn/FilterListBtn.jsx","views/PortfolioView.js"],"sourcesContent":["const Section = ({ children, className }) => {\n  return <section className={className}>{children}</section>;\n};\n\nexport { Section };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"FilterListBtn_list__kyc3-\",\"items\":\"FilterListBtn_items__PwdEE\",\"link\":\"FilterListBtn_link__Fj5k0\",\"active\":\"FilterListBtn_active__VSgYy\"};","import { NavLink, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  addCurrentType,\n  changeCurrentLimit,\n  changeCurrentType,\n} from 'redux/extraInfo/extraInfo-slice';\nimport {\n  getCurrentLimit,\n  getCurrentIndex,\n} from 'redux/extraInfo/extraInfo-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getfilter } from 'fakeAPI';\nimport s from './FilterListBtn.module.css';\n\nexport const FilterListBtn = () => {\n  const [products, setProducts] = useState([]);\n  const [searchParams] = useSearchParams();\n  const [unmount, setUnmount] = useState(true);\n\n  const getLimit = useSelector(getCurrentLimit);\n  const options = useSelector(getCurrentIndex);\n  const dispatch = useDispatch();\n\n  const limit = searchParams.get('limit') ?? getLimit;\n\n  useEffect(() => {\n    if (unmount) {\n      dispatch(changeCurrentLimit(Number(limit)));\n      setUnmount(false);\n    }\n    getfilter().then(setProducts);\n  }, [setProducts, dispatch, limit, unmount]);\n\n  const handleClick = id => {\n    dispatch(changeCurrentLimit(0));\n    dispatch(addCurrentType(id));\n    options.length > 0 && dispatch(changeCurrentType([]));\n  };\n\n  const isActiveClick = ({ isActive }) => {\n    return isActive ? `${s.link} ${s.active}` : `${s.link}`;\n  };\n\n  return (\n    <ul className={s.list}>\n      {products.map(({ id, name }) => (\n        <li className={s.items} key={id}>\n          <NavLink\n            onClick={() => handleClick(id)}\n            className={isActiveClick}\n            name={`${id}`}\n            to={`${id}`}\n          >\n            {name}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Section } from 'components/Section';\nimport { Container } from 'components/Container';\nimport { FilterListBtn } from 'components/FilterListBtn';\nimport styled from 'styled-components';\n\nconst SectionPortfolio = styled(Section)`\n  @media screen and (max-width: 1199px) {\n    padding: 60px 0;\n  }\n\n  @media screen and (min-width: 1200px) {\n    padding: 94px 0;\n  }\n`;\n\nconst PortfolioView = () => {\n  return (\n    <main>\n      <SectionPortfolio>\n        <Container>\n          <FilterListBtn />\n          <Suspense fallback={<h1>Loading ProductDetails...</h1>}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </SectionPortfolio>\n    </main>\n  );\n};\n\nexport default PortfolioView;\n"],"names":["Section","children","className","FilterListBtn","useState","products","setProducts","useSearchParams","searchParams","unmount","setUnmount","getLimit","useSelector","getCurrentLimit","options","getCurrentIndex","dispatch","useDispatch","limit","get","useEffect","changeCurrentLimit","Number","getfilter","then","isActiveClick","isActive","s","map","id","name","onClick","addCurrentType","length","changeCurrentType","handleClick","to","SectionPortfolio","styled","Container","Suspense","fallback"],"sourceRoot":""}